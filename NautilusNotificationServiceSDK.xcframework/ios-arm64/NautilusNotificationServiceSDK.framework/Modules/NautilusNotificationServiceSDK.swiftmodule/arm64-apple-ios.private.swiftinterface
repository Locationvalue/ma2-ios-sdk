// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NautilusNotificationServiceSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import UserNotifications
import _Concurrency
import _StringProcessing
public typealias NautilusNotificationHandlerAction = (NautilusNotificationServiceSDK.NautilusPushNotificationInfo) -> Swift.Void
@_hasMissingDesignatedInitializers @objc final public class NautilusPushNotificationInfo : ObjectiveC.NSObject {
  final public let pushIdentifier: Swift.Int
  final public let pushType: Swift.Int
  final public let transitionCommand: Swift.String?
  final public let title: Swift.String
  final public let message: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class NautilusNotificationHandler : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @discardableResult
  @objc final public func handleRemoteNotification(request: UserNotifications.UNNotificationRequest, action: NautilusNotificationServiceSDK.NautilusNotificationHandlerAction?) -> Swift.Bool
  @discardableResult
  @objc final public func handleRemoteNotification(userInfo: [Swift.AnyHashable : Any], action: NautilusNotificationServiceSDK.NautilusNotificationHandlerAction?) -> Swift.Bool
  @objc final public func canHandleRemoteNotification(request: UserNotifications.UNNotificationRequest) -> Swift.Bool
  @objc final public func canHandleRemoteNotification(userInfo: [Swift.AnyHashable : Any]) -> Swift.Bool
  @objc final public func didReceive(request: UserNotifications.UNNotificationRequest, bestAttemptContent: UserNotifications.UNMutableNotificationContent, completion: @escaping (Swift.Bool) -> Swift.Void)
  @objc final public func serviceExtensionTimeWillExpire(request: UserNotifications.UNNotificationRequest, bestAttemptContent: UserNotifications.UNMutableNotificationContent, contentHandler: (UserNotifications.UNNotificationContent) -> Swift.Void)
  @objc deinit
}
