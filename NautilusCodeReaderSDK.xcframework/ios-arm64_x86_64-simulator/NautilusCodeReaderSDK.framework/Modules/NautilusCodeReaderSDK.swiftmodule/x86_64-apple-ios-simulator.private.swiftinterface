// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NautilusCodeReaderSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Foundation
import NautilusCoreSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc public enum NautilusCodeReaderError : Swift.Int, Swift.Error {
  case cameraDeviceError
  case metadataError
  case codeTextError
  case codeFormatError
  case unknown
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public static var _nsErrorDomain: Swift.String {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class NautilusCodeReader : ObjectiveC.NSObject {
  @objc public static func instantiateCodeReaderViewController(_ app: NautilusCoreSDK.NautilusApp, setting: NautilusCodeReaderSDK.NautilusCodeReaderSetting, handler: NautilusCodeReaderSDK.NautilusCodeReaderHandler) -> UIKit.UIViewController
  @objc deinit
}
@objc public protocol NautilusCodeReaderHandler {
  @objc func codeReaderHandle(_ viewController: UIKit.UIViewController, codeText: Swift.String) -> Swift.Bool
  @objc func handleCodeDetectionError(_ viewController: UIKit.UIViewController, error: NautilusCodeReaderSDK.NautilusCodeReaderError) -> Swift.Bool
}
@objc final public class NautilusCodeReaderSetting : ObjectiveC.NSObject {
  final public let title: Swift.String
  final public let usageText: Swift.String
  final public let codeFormat: NautilusCodeReaderSDK.NautilusCodeFormat
  public init(title: Swift.String, usageText: Swift.String, codeFormat: NautilusCodeReaderSDK.NautilusCodeFormat)
  @objc deinit
}
@objc public enum NautilusCodeFormat : Swift.Int {
  case qrCode
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension NautilusCodeReaderSDK.NautilusCodeReaderError : Swift.Equatable {}
extension NautilusCodeReaderSDK.NautilusCodeReaderError : Swift.Hashable {}
extension NautilusCodeReaderSDK.NautilusCodeReaderError : Swift.RawRepresentable {}
extension NautilusCodeReaderSDK.NautilusCodeFormat : Swift.Equatable {}
extension NautilusCodeReaderSDK.NautilusCodeFormat : Swift.Hashable {}
extension NautilusCodeReaderSDK.NautilusCodeFormat : Swift.RawRepresentable {}
