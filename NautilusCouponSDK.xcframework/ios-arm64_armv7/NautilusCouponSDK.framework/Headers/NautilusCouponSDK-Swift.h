#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef NAUTILUSCOUPONSDK_SWIFT_H
#define NAUTILUSCOUPONSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import NautilusContainerSDK;
@import NautilusCoreSDK;
@import NautilusUISDK;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NautilusCouponSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



SWIFT_CLASS("_TtC17NautilusCouponSDK8CardType")
@interface CardType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17NautilusCouponSDK25CustomCellCouponImageList")
@interface CustomCellCouponImageList : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC17NautilusCouponSDK23NautilusAppExchangeType")
@interface NautilusAppExchangeType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class NautilusComponentDependency;
@class NautilusApp;
@class UIViewController;
@class NSNumber;
enum NautilusCouponPublishType : NSInteger;

/// アプリとのインターフェース
SWIFT_CLASS("_TtC17NautilusCouponSDK14NautilusCoupon")
@interface NautilusCoupon : NSObject <NautilusFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable configFilename;)
+ (NSString * _Nullable)configFilename SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NautilusComponentType componentType;)
+ (NautilusComponentType)componentType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NautilusComponentDependency *> * _Nonnull dependencies;)
+ (NSArray<NautilusComponentDependency *> * _Nonnull)dependencies SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) NautilusApp * _Nonnull app;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
+ (void)initializeWithApplication:(NautilusApp * _Nonnull)application;
+ (NautilusCoupon * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
+ (NautilusCoupon * _Nonnull)couponAppNamed:(NSString * _Nonnull)appName SWIFT_WARN_UNUSED_RESULT;
/// クーポン一覧VCを返す
- (UIViewController * _Nonnull)instantiateCouponListViewController SWIFT_WARN_UNUSED_RESULT;
/// お気に入りクーポン一覧VCを返す
- (UIViewController * _Nonnull)instantiateFavoriteCouponListViewController SWIFT_WARN_UNUSED_RESULT;
/// クーポンID・タイプからクーポン詳細VCを返す
- (UIViewController * _Nonnull)instantiateCouponDetailViewControllerWithCouponID:(NSInteger)couponID couponType:(enum NautilusCouponPublishType)couponType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NautilusCouponSortKey;
@class NSDate;
@class NautilusCouponInfo;
@class NSError;
@class NautilusCouponUseInfo;
@class NautilusCouponCategoryInfo;
@class NautilusCouponPublishTrigger;
@class NautilusCouponLog;
@protocol NautilusCouponUseValidObserver;

@interface NautilusCoupon (SWIFT_EXTENSION(NautilusCouponSDK))
/// 共通クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getCommonCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// 共通クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getCommonCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// 個人別クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrivateCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// 個人別クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrivateCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// お気に入り店舗クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getFavoriteShopCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// お気に入り店舗クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getFavoriteShopCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// 景品クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrizeCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime exchangeID:(NSInteger)exchangeID completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// 景品クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrizeCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// クーポン利用を行う
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)useCouponWithTargetCouponInfo:(NautilusCouponUseInfo * _Nonnull)targetCouponInfo optionalParameters:(NSDictionary<NSString *, NSString *> * _Nullable)optionalParameters completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// クーポン複数枚利用
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)useCouponsWithCouponUseInfoList:(NSArray<NautilusCouponUseInfo *> * _Nonnull)couponUseInfoList optionalParameters:(NSDictionary<NSString *, NSString *> * _Nullable)optionalParameters completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// お気に入りクーポン登録、削除を行う
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)updateFavoriteWithAddFavoriteCouponIDs:(NSArray<NSNumber *> * _Nullable)addFavoriteCouponIDs removeFavoriteCouponIDs:(NSArray<NSNumber *> * _Nullable)removeFavoriteCouponIDs completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// お気に入りクーポンの一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getFavoriteCouponListWithCompletion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// クーポンカテゴリー一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getCouponCategoryListWithCompletion:(void (^ _Nonnull)(NSArray<NautilusCouponCategoryInfo *> * _Nullable, NSError * _Nullable))completion;
/// 景品クーポンを発行する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)publishPrizeCouponWithTrigger:(NautilusCouponPublishTrigger * _Nonnull)trigger completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// クーポン閲覧記録を送信する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)sendCouponLogWithCouponLogs:(NSArray<NautilusCouponLog *> * _Nonnull)couponLogs completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// 指定のクーポンの「有効期限の終了日時」を計算する
- (NSDate * _Nullable)calculateUsedCouponValidEndDateOf:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// 指定したクーポンが利用済みであれば、現在、利用可能期間内にあるのかを判定する
/// \param coupon 利用可能期間内かを確認するクーポン
///
///
/// returns:
///
/// クーポンが利用済み、かつ、指定された利用可能期間内にある場合は、<code>true</code> を返す
/// クーポンがまだ利用されていない場合と、利用可能期間外にある場合は、<code>false</code>を返す
- (BOOL)isValidUsedCoupon:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// 現在日時からクーポンの有効期間終了までの秒数を取得
/// \param coupon 有効期間を確認するクーポン
///
///
/// returns:
/// 有効期間終了までの秒数
- (NSInteger)calculateUsedCouponValidDurationFromNowOf:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// クーポンの有効期間が終了したら通知するオブザーバを登録
/// \param observer <code>NautilusCouponUseValidObserver</code> を継承したクラス
///
/// \param coupon 有効期間内のクーポン
///
///
/// returns:
/// 有効期間の終了通知登録が成功したかどうか
- (BOOL)registerCouponUseValidObserver:(id <NautilusCouponUseValidObserver> _Nonnull)observer for:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// クーポンの有効期間が終了したら通知するオブザーバの登録解除
/// \param coupon 有効期間の終了通知を登録済みのクーポン
///
- (void)unregisterCouponUseValidObserverFor:(NautilusCouponInfo * _Nonnull)coupon;
@end

@class UIImageView;
@class UILabel;
@class UIButton;
@class UIView;
@class NSCoder;

/// クーポンセルクラスの基底クラス
SWIFT_CLASS("_TtC17NautilusCouponSDK22NautilusCouponBaseCell")
@interface NautilusCouponBaseCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified couponCoverImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified couponTitleLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified couponExpirePeriodLabel;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified couponFavoriteButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified couponCoverImageOverlayView;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified couponCoverImageOverlayImageView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// クーポンカテゴリーのデータ
SWIFT_CLASS("_TtC17NautilusCouponSDK26NautilusCouponCategoryInfo")
@interface NautilusCouponCategoryInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// セル内のボタンタップ時の処理
SWIFT_PROTOCOL("_TtP17NautilusCouponSDK31NautilusCouponCellActionHandler_")
@protocol NautilusCouponCellActionHandler
- (void)addFavoriteWithCoupon:(NautilusCouponInfo * _Nonnull)coupon;
- (void)removeFavoriteWithCoupon:(NautilusCouponInfo * _Nonnull)coupon;
- (void)showCouponUseConditionWithCouponID:(NSInteger)couponID;
- (void)useCouponWithCouponID:(NSInteger)couponID;
- (void)toggleCouponUseViewWithCell:(NautilusCouponBaseCell * _Nonnull)cell couponID:(NSInteger)couponID;
@end


SWIFT_CLASS("_TtC17NautilusCouponSDK18NautilusCouponData")
@interface NautilusCouponData : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NautilusCouponError, open) {
/// 不明
  NautilusCouponErrorUnknown = 0,
/// 接続エラー
  NautilusCouponErrorConnection = 1,
/// API処理エラー
  NautilusCouponErrorApiProcessError = 2,
/// HTTP/HTTPS通信エラー
  NautilusCouponErrorHttpConnection = 3,
/// レスポンスのパースエラー
  NautilusCouponErrorParseFailure = 4,
/// 明示的にユーザーによりキャンセルされた
  NautilusCouponErrorUserCancelled = 5,
/// パラメータが不正
  NautilusCouponErrorInvalidParamater = 6,
};
static NSString * _Nonnull const NautilusCouponErrorDomain = @"NautilusCouponSDK.NautilusCouponError";

typedef SWIFT_ENUM(NSInteger, NautilusCouponExchangeType, open) {
  NautilusCouponExchangeTypeExchange = 1,
  NautilusCouponExchangeTypeNotExchange = 0,
};


/// MA 2.0 クーポン画像のデータ
SWIFT_CLASS("_TtC17NautilusCouponSDK23NautilusCouponImageInfo")
@interface NautilusCouponImageInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// MA 2.0 クーポンのデータ
SWIFT_CLASS("_TtC17NautilusCouponSDK18NautilusCouponInfo")
@interface NautilusCouponInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// クーポン閲覧APIに引き渡すパラメーター
SWIFT_CLASS("_TtC17NautilusCouponSDK17NautilusCouponLog")
@interface NautilusCouponLog : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// クーポン閲覧APIで記録するログ種別
typedef SWIFT_ENUM(NSInteger, NautilusCouponLogType, open) {
/// 詳細閲覧
  NautilusCouponLogTypeViewCoupon = 0,
/// クーポンのURLをタップ
  NautilusCouponLogTypeTapCouponURL = 1,
};


/// クーポン発行APIに引き渡すパラメーター
SWIFT_CLASS("_TtC17NautilusCouponSDK28NautilusCouponPublishTrigger")
@interface NautilusCouponPublishTrigger : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// クーポンの発行タイミングの定義
typedef SWIFT_ENUM(NSInteger, NautilusCouponPublishTriggerType, open) {
/// 会員情報の初回登録
  NautilusCouponPublishTriggerTypeInitialMemberRegistration = 0,
/// アプリの初回ダウンロード
  NautilusCouponPublishTriggerTypeAppDownload = 1,
/// 会員カード連携
  NautilusCouponPublishTriggerTypeMemberCardRegistration = 2,
/// 指定コード発行
  NautilusCouponPublishTriggerTypeCouponCode = 3,
};

/// クーポンタイプ
/// 1:全体 2:個人別 3:店舗別 4:景品
typedef SWIFT_ENUM(NSInteger, NautilusCouponPublishType, open) {
  NautilusCouponPublishTypeCommon = 1,
  NautilusCouponPublishTypePrivate = 2,
  NautilusCouponPublishTypeShop = 3,
  NautilusCouponPublishTypePrize = 4,
};


/// APIから取得するデータの並び順
SWIFT_CLASS("_TtC17NautilusCouponSDK21NautilusCouponSortKey")
@interface NautilusCouponSortKey : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// APIから取得するデータの並び順のキー名
typedef SWIFT_ENUM(NSInteger, NautilusCouponSortKeyName, open) {
/// 掲載開始日時
  NautilusCouponSortKeyNamePublishStartDateTime = 0,
/// 掲載終了日時
  NautilusCouponSortKeyNamePublishEndDateTime = 1,
/// 利用開始日時
  NautilusCouponSortKeyNameUseStartDateTime = 2,
/// 利用終了日時
  NautilusCouponSortKeyNameUseEndDateTime = 3,
/// 表示優先順位
  NautilusCouponSortKeyNameSortNumber = 4,
};

/// APIから取得するデータの並び順の順序指定
typedef SWIFT_ENUM(NSInteger, NautilusCouponSortKeyOrder, open) {
  NautilusCouponSortKeyOrderAscending = 0,
  NautilusCouponSortKeyOrderDescending = 1,
};


/// 利用するクーポンのクラス
SWIFT_CLASS("_TtC17NautilusCouponSDK21NautilusCouponUseInfo")
@interface NautilusCouponUseInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// クーポン利用を監視する
SWIFT_PROTOCOL("_TtP17NautilusCouponSDK30NautilusCouponUseValidObserver_")
@protocol NautilusCouponUseValidObserver
/// クーポンが無効になった時呼ばれる
- (void)onCouponInvalidWithCoupon:(NautilusCouponInfo * _Nonnull)coupon;
@end

typedef SWIFT_ENUM(NSInteger, PublishTiming, open) {
  PublishTimingFirstRegister = 1,
  PublishTimingFirstDownload = 2,
  PublishTimingCardPublication = 3,
  PublishTimingCodePublication = 4,
};

typedef SWIFT_ENUM(NSInteger, SectionType, open) {
  SectionTypeUseStatus = 0,
  SectionTypeNone = 1,
};

@class UIColor;
@class CellWidth;
@class UIImage;

SWIFT_CLASS("_TtC17NautilusCouponSDK21_NautilusCouponConfig")
@interface _NautilusCouponConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _NautilusCouponConfig * _Nonnull shared;)
+ (_NautilusCouponConfig * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (_NautilusCouponConfig * _Nonnull)initializeWithNoneCategorySetting:(enum NoneCategory)noneCategorySetting loadingText:(NSString * _Nullable)loadingText categoryTextColor:(UIColor * _Nullable)categoryTextColor categoryCellColor:(UIColor * _Nullable)categoryCellColor categoryCellWidth:(CellWidth * _Nullable)categoryCellWidth hasDetailView:(enum TransitionStyle)hasDetailView contentsColumn:(enum ContentsColumn)contentsColumn cellClass:(SWIFT_METATYPE(NautilusCouponBaseCell) _Nullable)cellClass sectionType:(enum SectionType)sectionType sectionText:(NSArray<NSString *> * _Nullable)sectionText zeroImage:(UIImage * _Nullable)zeroImage zeroText:(NSString * _Nullable)zeroText errorImage:(UIImage * _Nullable)errorImage errorText:(NSString * _Nullable)errorText errorButtonTitle:(NSString * _Nullable)errorButtonTitle SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef NAUTILUSCOUPONSDK_SWIFT_H
#define NAUTILUSCOUPONSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import NautilusContainerSDK;
@import NautilusCoreSDK;
@import NautilusUISDK;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NautilusCouponSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



SWIFT_CLASS("_TtC17NautilusCouponSDK8CardType")
@interface CardType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17NautilusCouponSDK25CustomCellCouponImageList")
@interface CustomCellCouponImageList : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC17NautilusCouponSDK23NautilusAppExchangeType")
@interface NautilusAppExchangeType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class NautilusComponentDependency;
@class NautilusApp;
@class UIViewController;
@class NSNumber;
enum NautilusCouponPublishType : NSInteger;

/// アプリとのインターフェース
SWIFT_CLASS("_TtC17NautilusCouponSDK14NautilusCoupon")
@interface NautilusCoupon : NSObject <NautilusFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable configFilename;)
+ (NSString * _Nullable)configFilename SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NautilusComponentType componentType;)
+ (NautilusComponentType)componentType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NautilusComponentDependency *> * _Nonnull dependencies;)
+ (NSArray<NautilusComponentDependency *> * _Nonnull)dependencies SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) NautilusApp * _Nonnull app;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
+ (void)initializeWithApplication:(NautilusApp * _Nonnull)application;
+ (NautilusCoupon * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
+ (NautilusCoupon * _Nonnull)couponAppNamed:(NSString * _Nonnull)appName SWIFT_WARN_UNUSED_RESULT;
/// クーポン一覧VCを返す
- (UIViewController * _Nonnull)instantiateCouponListViewController SWIFT_WARN_UNUSED_RESULT;
/// お気に入りクーポン一覧VCを返す
- (UIViewController * _Nonnull)instantiateFavoriteCouponListViewController SWIFT_WARN_UNUSED_RESULT;
/// クーポンID・タイプからクーポン詳細VCを返す
- (UIViewController * _Nonnull)instantiateCouponDetailViewControllerWithCouponID:(NSInteger)couponID couponType:(enum NautilusCouponPublishType)couponType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NautilusCouponSortKey;
@class NSDate;
@class NautilusCouponInfo;
@class NSError;
@class NautilusCouponUseInfo;
@class NautilusCouponCategoryInfo;
@class NautilusCouponPublishTrigger;
@class NautilusCouponLog;
@protocol NautilusCouponUseValidObserver;

@interface NautilusCoupon (SWIFT_EXTENSION(NautilusCouponSDK))
/// 共通クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getCommonCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// 共通クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getCommonCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// 個人別クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrivateCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// 個人別クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrivateCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// お気に入り店舗クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getFavoriteShopCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// お気に入り店舗クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getFavoriteShopCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// 景品クーポン一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrizeCouponListWithOffset:(NSInteger)offset limit:(NSInteger)limit useCache:(BOOL)useCache couponIDs:(NSArray<NSNumber *> * _Nullable)couponIDs categoryIDs:(NSArray<NSNumber *> * _Nullable)categoryIDs sortKeys:(NSArray<NautilusCouponSortKey *> * _Nullable)sortKeys checkDateTime:(NSDate * _Nullable)checkDateTime exchangeID:(NSInteger)exchangeID completion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// 景品クーポン件数を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getPrizeCouponCountWithCheckDateTime:(NSDate * _Nullable)checkDateTime completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
/// クーポン利用を行う
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)useCouponWithTargetCouponInfo:(NautilusCouponUseInfo * _Nonnull)targetCouponInfo optionalParameters:(NSDictionary<NSString *, NSString *> * _Nullable)optionalParameters completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// クーポン複数枚利用
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)useCouponsWithCouponUseInfoList:(NSArray<NautilusCouponUseInfo *> * _Nonnull)couponUseInfoList optionalParameters:(NSDictionary<NSString *, NSString *> * _Nullable)optionalParameters completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// お気に入りクーポン登録、削除を行う
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)updateFavoriteWithAddFavoriteCouponIDs:(NSArray<NSNumber *> * _Nullable)addFavoriteCouponIDs removeFavoriteCouponIDs:(NSArray<NSNumber *> * _Nullable)removeFavoriteCouponIDs completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// お気に入りクーポンの一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getFavoriteCouponListWithCompletion:(void (^ _Nonnull)(NSArray<NautilusCouponInfo *> * _Nullable, NSError * _Nullable))completion;
/// クーポンカテゴリー一覧を取得する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)getCouponCategoryListWithCompletion:(void (^ _Nonnull)(NSArray<NautilusCouponCategoryInfo *> * _Nullable, NSError * _Nullable))completion;
/// 景品クーポンを発行する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)publishPrizeCouponWithTrigger:(NautilusCouponPublishTrigger * _Nonnull)trigger completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// クーポン閲覧記録を送信する
/// Objective-Cから呼び出す場合は、こちらのメソッドを利用してください
- (void)sendCouponLogWithCouponLogs:(NSArray<NautilusCouponLog *> * _Nonnull)couponLogs completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// 指定のクーポンの「有効期限の終了日時」を計算する
- (NSDate * _Nullable)calculateUsedCouponValidEndDateOf:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// 指定したクーポンが利用済みであれば、現在、利用可能期間内にあるのかを判定する
/// \param coupon 利用可能期間内かを確認するクーポン
///
///
/// returns:
///
/// クーポンが利用済み、かつ、指定された利用可能期間内にある場合は、<code>true</code> を返す
/// クーポンがまだ利用されていない場合と、利用可能期間外にある場合は、<code>false</code>を返す
- (BOOL)isValidUsedCoupon:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// 現在日時からクーポンの有効期間終了までの秒数を取得
/// \param coupon 有効期間を確認するクーポン
///
///
/// returns:
/// 有効期間終了までの秒数
- (NSInteger)calculateUsedCouponValidDurationFromNowOf:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// クーポンの有効期間が終了したら通知するオブザーバを登録
/// \param observer <code>NautilusCouponUseValidObserver</code> を継承したクラス
///
/// \param coupon 有効期間内のクーポン
///
///
/// returns:
/// 有効期間の終了通知登録が成功したかどうか
- (BOOL)registerCouponUseValidObserver:(id <NautilusCouponUseValidObserver> _Nonnull)observer for:(NautilusCouponInfo * _Nonnull)coupon SWIFT_WARN_UNUSED_RESULT;
/// クーポンの有効期間が終了したら通知するオブザーバの登録解除
/// \param coupon 有効期間の終了通知を登録済みのクーポン
///
- (void)unregisterCouponUseValidObserverFor:(NautilusCouponInfo * _Nonnull)coupon;
@end

@class UIImageView;
@class UILabel;
@class UIButton;
@class UIView;
@class NSCoder;

/// クーポンセルクラスの基底クラス
SWIFT_CLASS("_TtC17NautilusCouponSDK22NautilusCouponBaseCell")
@interface NautilusCouponBaseCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified couponCoverImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified couponTitleLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified couponExpirePeriodLabel;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified couponFavoriteButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified couponCoverImageOverlayView;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified couponCoverImageOverlayImageView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// クーポンカテゴリーのデータ
SWIFT_CLASS("_TtC17NautilusCouponSDK26NautilusCouponCategoryInfo")
@interface NautilusCouponCategoryInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// セル内のボタンタップ時の処理
SWIFT_PROTOCOL("_TtP17NautilusCouponSDK31NautilusCouponCellActionHandler_")
@protocol NautilusCouponCellActionHandler
- (void)addFavoriteWithCoupon:(NautilusCouponInfo * _Nonnull)coupon;
- (void)removeFavoriteWithCoupon:(NautilusCouponInfo * _Nonnull)coupon;
- (void)showCouponUseConditionWithCouponID:(NSInteger)couponID;
- (void)useCouponWithCouponID:(NSInteger)couponID;
- (void)toggleCouponUseViewWithCell:(NautilusCouponBaseCell * _Nonnull)cell couponID:(NSInteger)couponID;
@end


SWIFT_CLASS("_TtC17NautilusCouponSDK18NautilusCouponData")
@interface NautilusCouponData : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NautilusCouponError, open) {
/// 不明
  NautilusCouponErrorUnknown = 0,
/// 接続エラー
  NautilusCouponErrorConnection = 1,
/// API処理エラー
  NautilusCouponErrorApiProcessError = 2,
/// HTTP/HTTPS通信エラー
  NautilusCouponErrorHttpConnection = 3,
/// レスポンスのパースエラー
  NautilusCouponErrorParseFailure = 4,
/// 明示的にユーザーによりキャンセルされた
  NautilusCouponErrorUserCancelled = 5,
/// パラメータが不正
  NautilusCouponErrorInvalidParamater = 6,
};
static NSString * _Nonnull const NautilusCouponErrorDomain = @"NautilusCouponSDK.NautilusCouponError";

typedef SWIFT_ENUM(NSInteger, NautilusCouponExchangeType, open) {
  NautilusCouponExchangeTypeExchange = 1,
  NautilusCouponExchangeTypeNotExchange = 0,
};


/// MA 2.0 クーポン画像のデータ
SWIFT_CLASS("_TtC17NautilusCouponSDK23NautilusCouponImageInfo")
@interface NautilusCouponImageInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// MA 2.0 クーポンのデータ
SWIFT_CLASS("_TtC17NautilusCouponSDK18NautilusCouponInfo")
@interface NautilusCouponInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// クーポン閲覧APIに引き渡すパラメーター
SWIFT_CLASS("_TtC17NautilusCouponSDK17NautilusCouponLog")
@interface NautilusCouponLog : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// クーポン閲覧APIで記録するログ種別
typedef SWIFT_ENUM(NSInteger, NautilusCouponLogType, open) {
/// 詳細閲覧
  NautilusCouponLogTypeViewCoupon = 0,
/// クーポンのURLをタップ
  NautilusCouponLogTypeTapCouponURL = 1,
};


/// クーポン発行APIに引き渡すパラメーター
SWIFT_CLASS("_TtC17NautilusCouponSDK28NautilusCouponPublishTrigger")
@interface NautilusCouponPublishTrigger : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// クーポンの発行タイミングの定義
typedef SWIFT_ENUM(NSInteger, NautilusCouponPublishTriggerType, open) {
/// 会員情報の初回登録
  NautilusCouponPublishTriggerTypeInitialMemberRegistration = 0,
/// アプリの初回ダウンロード
  NautilusCouponPublishTriggerTypeAppDownload = 1,
/// 会員カード連携
  NautilusCouponPublishTriggerTypeMemberCardRegistration = 2,
/// 指定コード発行
  NautilusCouponPublishTriggerTypeCouponCode = 3,
};

/// クーポンタイプ
/// 1:全体 2:個人別 3:店舗別 4:景品
typedef SWIFT_ENUM(NSInteger, NautilusCouponPublishType, open) {
  NautilusCouponPublishTypeCommon = 1,
  NautilusCouponPublishTypePrivate = 2,
  NautilusCouponPublishTypeShop = 3,
  NautilusCouponPublishTypePrize = 4,
};


/// APIから取得するデータの並び順
SWIFT_CLASS("_TtC17NautilusCouponSDK21NautilusCouponSortKey")
@interface NautilusCouponSortKey : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// APIから取得するデータの並び順のキー名
typedef SWIFT_ENUM(NSInteger, NautilusCouponSortKeyName, open) {
/// 掲載開始日時
  NautilusCouponSortKeyNamePublishStartDateTime = 0,
/// 掲載終了日時
  NautilusCouponSortKeyNamePublishEndDateTime = 1,
/// 利用開始日時
  NautilusCouponSortKeyNameUseStartDateTime = 2,
/// 利用終了日時
  NautilusCouponSortKeyNameUseEndDateTime = 3,
/// 表示優先順位
  NautilusCouponSortKeyNameSortNumber = 4,
};

/// APIから取得するデータの並び順の順序指定
typedef SWIFT_ENUM(NSInteger, NautilusCouponSortKeyOrder, open) {
  NautilusCouponSortKeyOrderAscending = 0,
  NautilusCouponSortKeyOrderDescending = 1,
};


/// 利用するクーポンのクラス
SWIFT_CLASS("_TtC17NautilusCouponSDK21NautilusCouponUseInfo")
@interface NautilusCouponUseInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// クーポン利用を監視する
SWIFT_PROTOCOL("_TtP17NautilusCouponSDK30NautilusCouponUseValidObserver_")
@protocol NautilusCouponUseValidObserver
/// クーポンが無効になった時呼ばれる
- (void)onCouponInvalidWithCoupon:(NautilusCouponInfo * _Nonnull)coupon;
@end

typedef SWIFT_ENUM(NSInteger, PublishTiming, open) {
  PublishTimingFirstRegister = 1,
  PublishTimingFirstDownload = 2,
  PublishTimingCardPublication = 3,
  PublishTimingCodePublication = 4,
};

typedef SWIFT_ENUM(NSInteger, SectionType, open) {
  SectionTypeUseStatus = 0,
  SectionTypeNone = 1,
};

@class UIColor;
@class CellWidth;
@class UIImage;

SWIFT_CLASS("_TtC17NautilusCouponSDK21_NautilusCouponConfig")
@interface _NautilusCouponConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _NautilusCouponConfig * _Nonnull shared;)
+ (_NautilusCouponConfig * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (_NautilusCouponConfig * _Nonnull)initializeWithNoneCategorySetting:(enum NoneCategory)noneCategorySetting loadingText:(NSString * _Nullable)loadingText categoryTextColor:(UIColor * _Nullable)categoryTextColor categoryCellColor:(UIColor * _Nullable)categoryCellColor categoryCellWidth:(CellWidth * _Nullable)categoryCellWidth hasDetailView:(enum TransitionStyle)hasDetailView contentsColumn:(enum ContentsColumn)contentsColumn cellClass:(SWIFT_METATYPE(NautilusCouponBaseCell) _Nullable)cellClass sectionType:(enum SectionType)sectionType sectionText:(NSArray<NSString *> * _Nullable)sectionText zeroImage:(UIImage * _Nullable)zeroImage zeroText:(NSString * _Nullable)zeroText errorImage:(UIImage * _Nullable)errorImage errorText:(NSString * _Nullable)errorText errorButtonTitle:(NSString * _Nullable)errorButtonTitle SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
