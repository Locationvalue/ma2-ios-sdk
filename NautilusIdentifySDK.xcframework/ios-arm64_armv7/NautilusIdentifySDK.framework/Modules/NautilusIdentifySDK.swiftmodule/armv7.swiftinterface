// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NautilusIdentifySDK
import Foundation
import NautilusConfigSDK
import NautilusContainerSDK
import NautilusCoreSDK
import NautilusLoggingSDK
import Swift
import UIKit
@objc public protocol NautilusUser {
  @objc var userID: Swift.String { get }
  @objc var pid: Swift.String { get }
  @objc var manageCode: Swift.String? { get }
  @objc var externalID: Swift.String? { get }
  @objc var externalIDType: Swift.Int { get }
  @objc var isAnonymous: Swift.Bool { get }
}
public let NautilusUserExternalIDTypeNone: Swift.Int
@objc @_inheritsConvenienceInitializers open class NautilusUserInfoView : UIKit.UIView {
  open class var nibFilename: Swift.String {
    get
  }
  open class func instantiate() -> NautilusIdentifySDK.NautilusUserInfoView
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  open func setCodeImage(_ codeImage: UIKit.UIImage?)
  open func setCodeString(_ codeString: Swift.String?)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class NautilusUserInfoViewProvider : ObjectiveC.NSObject {
  @objc final public func setCodeImageProvider(_ codeImageProvider: NautilusIdentifySDK.NautilusUserInfoCodeImageProvider?)
  @objc final public func setCodeImageSize(_ codeImageSize: CoreGraphics.CGSize)
  @objc final public func provideUserInfoView() -> UIKit.UIView
  @objc final public func provideUserInfoView(user: NautilusIdentifySDK.NautilusUser) -> UIKit.UIView
  @objc final public func provideUserInfoView(viewType: NautilusIdentifySDK.NautilusUserInfoView.Type) -> UIKit.UIView
  @objc final public func provideUserInfoView(user: NautilusIdentifySDK.NautilusUser, viewType: NautilusIdentifySDK.NautilusUserInfoView.Type) -> UIKit.UIView
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class NautilusIdentify : ObjectiveC.NSObject, NautilusCoreSDK.NautilusFeature {
  @objc public static var componentType: NautilusContainerSDK.NautilusComponentType {
    @objc get
  }
  @objc public static var dependencies: [NautilusContainerSDK.NautilusComponentDependency] {
    @objc get
  }
  @objc public static var configFilename: Swift.String {
    @objc get
  }
  @objc final public let app: NautilusCoreSDK.NautilusApp
  @objc final public let name: Swift.String?
  final public var cid: Swift.String {
    get
  }
  @objc public static func initialize(application: NautilusCoreSDK.NautilusApp)
  @objc public static func identify() -> NautilusIdentifySDK.NautilusIdentify
  @objc(identifyAppNamed:) public static func identify(appName: Swift.String) -> NautilusIdentifySDK.NautilusIdentify
  @objc final public func changeUser(userID: Swift.String?)
  @objc final public func getCurrentUser() -> NautilusIdentifySDK.NautilusUser
  @objc final public func setManageCode(userID: Swift.String, manageCode: Swift.String, asNewUser: Swift.Bool)
  @objc final public func setExternalID(userID: Swift.String, externalID: Swift.String, externalIDType: Swift.Int, asNewUser: Swift.Bool)
  @objc final public func setManageCodeAndExternalID(userID: Swift.String, manageCode: Swift.String, externalID: Swift.String, externalIDType: Swift.Int, asNewUser: Swift.Bool)
  @objc final public func getUserInfoView() -> UIKit.UIView
  @objc final public func getUserInfoView(viewType: NautilusIdentifySDK.NautilusUserInfoView.Type) -> UIKit.UIView
  @objc final public func setCodeImageProvider(_ codeImageProvider: NautilusIdentifySDK.NautilusUserInfoCodeImageProvider?)
  @objc final public func setCodeImageSize(_ codeImageSize: CoreGraphics.CGSize)
  @objc final public func removeCID()
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol NautilusUserInfoCodeImageProvider {
  @objc func provideCodeImage(for codeString: Swift.String, size: CoreGraphics.CGSize) -> UIKit.UIImage?
}
extension Notification.NautilusApp {
  public static let identifyUpdateCID: Foundation.Notification.Name
  public static let identifyChangeCurrentUser: Foundation.Notification.Name
}
extension Notification.NautilusApp.UserInfoKey {
  public static let newCID: Swift.String
}
